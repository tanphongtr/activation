# Generated by Django 4.1.4 on 2022-12-11 21:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0, verbose_name='index')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='label')),
                ('type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Textarea'), ('select', 'Select'), ('checkbox', 'Checkbox'), ('radio', 'Radio'), ('file', 'File'), ('date', 'Date'), ('datetime', 'Datetime'), ('time', 'Time'), ('number', 'Number')], default='text', max_length=255, verbose_name='field')),
                ('default_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='default value')),
                ('required', models.BooleanField(default=False, verbose_name='required')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('regex', models.CharField(blank=True, max_length=255, verbose_name='regex')),
                ('min_select', models.IntegerField(default=0, verbose_name='min select')),
                ('max_select', models.IntegerField(default=0, verbose_name='max select')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
            ],
            options={
                'verbose_name': 'form field',
                'verbose_name_plural': 'form fields',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'form',
                'verbose_name_plural': 'forms',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='FieldOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0, verbose_name='index')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('value', models.CharField(max_length=255, verbose_name='value')),
                ('form_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_options', to='form.field')),
            ],
            options={
                'verbose_name': 'field option',
                'verbose_name_plural': 'field options',
                'ordering': ('-index',),
            },
        ),
        migrations.AddField(
            model_name='field',
            name='form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='form.form'),
        ),
        migrations.AddField(
            model_name='field',
            name='option',
            field=models.ManyToManyField(blank=True, related_name='form_fields', to='form.fieldoption'),
        ),
    ]
